{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites.js"],"sourcesContent":["import { openModalWindEx } from './modal-window-exercise';\n\nconst exercisesNotFound = document.querySelector(\n  '.favorites-page-items-not-found'\n);\nconst exercisesGallery = document.querySelector(\n  '.favorites-page-items-gallery'\n);\n\nconst svgArrowUrl = new URL('/img/sprite.svg#icon-arrow', import.meta.url);\nconst KEY = 'favorites';\nconst storageFetch = localStorage.getItem(KEY);\nconst savedInStorageExercises = JSON.parse(storageFetch);\n\nfunction hideElem(elem) {\n  elem.style.display = 'none';\n}\nfunction showElem(elem) {\n  elem.style.display = 'flex';\n}\nfunction renderExerciseCards(arr) {\n  const galleryItems = arr.reduce(\n    (html, card) =>\n      html +\n      `<li class=\"gallery-list-item\">\n                <div class=\"workout-box\">\n                    <div class=\"workout-header\">\n                        <div class=\"workout-header-wrap\">\n                            <span class=\"workout-title\">WORKOUT</span>\n                            <button type=\"button\" class=\"delete-workout-btn\" id=\"${card._id}\">                            \n                                <svg class=\"trash-icon\" id=\"${card._id}\" width=\"16\" height=\"16\" aria-label=\"trash-icon\">\n                                  <use href=\"./img/sprite.svg#icon-trash\" id=\"${card._id}\"></use>\n                                </svg>\n                            </button>\n                        </div>\n                        <div class=\"start-button-wrap\">\n                            <button type=\"button\" class=\"start-button\" id=${card._id}>Start\n                                <svg class=\"start-arrow-icon\" id=${card._id} width=\"14\" height=\"14\" aria-label=\"start-arrow\">\n                                  <use href=${svgArrowUrl}></use>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"workout-type\">\n                        <svg class=\"run-man-icon\" width=\"24\" height=\"24\" aria-label=\"run-man\">\n                            <use href=\"./img/sprite.svg#icon-lighticon\"></use>\n                        </svg>\n                        <h3 class=\"workout-name\">${card.name}</h3>\n                    </div>\n                    <div class=\"workout-description\">\n                        <p class=\"description-item-name\">Burned calories:\n                            <span class=\"description-item-value\">${card.burnedCalories} / ${card.time} min</span>\n                        </p>\n                        <p class=\"description-item-name\">Body part:\n                            <span class=\"description-item-value\">${card.bodyPart}</span>\n                        </p>\n                        <p class=\"description-item-name\">Target:\n                            <span class=\"description-item-value\">${card.target}</span>\n                        </p>\n                    </div>\n                </div>\n            </li>`,\n    ''\n  );\n  exercisesGallery.innerHTML = galleryItems;\n}\n\nconsole.log(savedInStorageExercises);\nif (storageFetch === null || savedInStorageExercises.length === 0) {\n  hideElem(exercisesGallery);\n} else {\n  hideElem(exercisesNotFound);\n  renderExerciseCards(savedInStorageExercises);\n}\n\n///\nexercisesGallery.addEventListener('click', async event => {\n  let id;\n  const clickedButton = event.target;\n  console.log(clickedButton);\n  if (clickedButton && clickedButton.closest('.start-button')) {\n    id = clickedButton.closest('.start-button').getAttribute('id');\n    await openModalWindEx(id);\n  }\n});\n\nexercisesGallery.addEventListener('click', event => {\n  if (\n    event.target.className === 'delete-workout-btn' ||\n    event.target.ariaLabel === 'trash-icon'\n  ) {\n    const filteredArr = savedInStorageExercises.filter(\n      card => card._id !== event.target.id\n    );\n    localStorage.setItem(KEY, JSON.stringify(filteredArr));\n\n    if (filteredArr.length === 0) {\n      hideElem(exercisesGallery);\n      showElem(exercisesNotFound);\n    } else {\n      const storageRequest = localStorage.getItem(KEY);\n      const newExercisesList = JSON.parse(storageRequest);\n      renderExerciseCards(newExercisesList);\n    }\n  }\n});\n"],"names":["exercisesNotFound","exercisesGallery","svgArrowUrl","KEY","storageFetch","savedInStorageExercises","hideElem","elem","showElem","renderExerciseCards","arr","galleryItems","html","card","event","id","clickedButton","openModalWindEx","filteredArr","storageRequest","newExercisesList"],"mappings":"sFAEA,MAAMA,EAAoB,SAAS,cACjC,iCACF,EACMC,EAAmB,SAAS,cAChC,+BACF,EAEMC,EAAc,kFACdC,EAAM,YACNC,EAAe,aAAa,QAAQD,CAAG,EACvCE,EAA0B,KAAK,MAAMD,CAAY,EAEvD,SAASE,EAASC,EAAM,CACtBA,EAAK,MAAM,QAAU,MACvB,CACA,SAASC,EAASD,EAAM,CACtBA,EAAK,MAAM,QAAU,MACvB,CACA,SAASE,EAAoBC,EAAK,CAChC,MAAMC,EAAeD,EAAI,OACvB,CAACE,EAAMC,IACLD,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAK6EC,EAAK,GAAG;AAAA,8DAC7BA,EAAK,GAAG;AAAA,gFACUA,EAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,4EAKZA,EAAK,GAAG;AAAA,mEACjBA,EAAK,GAAG;AAAA,8CAC7BX,CAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDASNW,EAAK,IAAI;AAAA;AAAA;AAAA;AAAA,mEAIOA,EAAK,cAAc,MAAMA,EAAK,IAAI;AAAA;AAAA;AAAA,mEAGlCA,EAAK,QAAQ;AAAA;AAAA;AAAA,mEAGbA,EAAK,MAAM;AAAA;AAAA;AAAA;AAAA,mBAK1E,EACJ,EACEZ,EAAiB,UAAYU,CAC/B,CAEA,QAAQ,IAAIN,CAAuB,EAC/BD,IAAiB,MAAQC,EAAwB,SAAW,EAC9DC,EAASL,CAAgB,GAEzBK,EAASN,CAAiB,EAC1BS,EAAoBJ,CAAuB,GAI7CJ,EAAiB,iBAAiB,QAAS,MAAMa,GAAS,CACxD,IAAIC,EACJ,MAAMC,EAAgBF,EAAM,OAC5B,QAAQ,IAAIE,CAAa,EACrBA,GAAiBA,EAAc,QAAQ,eAAe,IACxDD,EAAKC,EAAc,QAAQ,eAAe,EAAE,aAAa,IAAI,EAC7D,MAAMC,EAAgBF,CAAE,EAE5B,CAAC,EAEDd,EAAiB,iBAAiB,QAASa,GAAS,CAClD,GACEA,EAAM,OAAO,YAAc,sBAC3BA,EAAM,OAAO,YAAc,aAC3B,CACA,MAAMI,EAAcb,EAAwB,OAC1CQ,GAAQA,EAAK,MAAQC,EAAM,OAAO,EACxC,EAGI,GAFA,aAAa,QAAQX,EAAK,KAAK,UAAUe,CAAW,CAAC,EAEjDA,EAAY,SAAW,EACzBZ,EAASL,CAAgB,EACzBO,EAASR,CAAiB,MACrB,CACL,MAAMmB,EAAiB,aAAa,QAAQhB,CAAG,EACzCiB,EAAmB,KAAK,MAAMD,CAAc,EAClDV,EAAoBW,CAAgB,CACrC,CACF,CACH,CAAC"}