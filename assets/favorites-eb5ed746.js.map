{"version":3,"file":"favorites-eb5ed746.js","sources":["../../src/js/quote.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  // Отримуємо елементи DOM для цитати та автора\n  const quoteTextElement = document.querySelector('.quote-text');\n  const quoteAuthorElement = document.querySelector('.quote-author');\n\n  // Функція отримання збереженої цитати\n  function getStoredQuote() {\n    return JSON.parse(localStorage.getItem('quoteData')) || {};\n  }\n\n  // Функція відображення збереженої цитати при завантаженні сторінки\n  function displayStoredQuote() {\n    const storedQuoteData = getStoredQuote();\n    displayQuote(storedQuoteData.quote, storedQuoteData.author);\n  }\n\n  // Функція відображення цитати\n  function displayQuote(quote, author) {\n    quoteTextElement.textContent = quote || 'No quote available.';\n    quoteAuthorElement.textContent = author || 'Unknown author';\n  }\n\n  // Виклик функції відображення збереженої цитати при завантаженні сторінки\n  displayStoredQuote();\n\n  // Асинхронна функція отримання цитати з backend\n  async function fetchQuote() {\n    try {\n      const response = await fetch('https://energyflow.b.goit.study/api/quote');\n      const data = await response.json();\n\n      const storedQuoteData = getStoredQuote();\n\n      // Перевірка, чи цитата та автор змінилися\n      if (\n        data.quote !== storedQuoteData.quote ||\n        data.author !== storedQuoteData.author\n      ) {\n        // Зберігаємо нову цитату та автора, відображаємо на сторінці\n        saveQuoteToLocalStorage(\n          data.quote,\n          data.author,\n          new Date().toDateString()\n        );\n        displayQuote(data.quote, data.author);\n      } else {\n        // Якщо цитата не змінилась, відображаємо збережену цитату\n        displayStoredQuote();\n      }\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  }\n\n  // Періодичний виклик функції отримання цитати (раз на добу)\n  setInterval(fetchQuote, 24 * 60 * 60 * 1000);\n});\n"],"names":["quoteTextElement","quoteAuthorElement","getStoredQuote","displayStoredQuote","storedQuoteData","displayQuote","quote","author","fetchQuote","data","error"],"mappings":"ssBAAA,SAAS,iBAAiB,mBAAoB,UAAY,CAExD,MAAMA,EAAmB,SAAS,cAAc,aAAa,EACvDC,EAAqB,SAAS,cAAc,eAAe,EAGjE,SAASC,GAAiB,CACxB,OAAO,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,EACzD,CAGD,SAASC,GAAqB,CAC5B,MAAMC,EAAkBF,IACxBG,EAAaD,EAAgB,MAAOA,EAAgB,MAAM,CAC3D,CAGD,SAASC,EAAaC,EAAOC,EAAQ,CACnCP,EAAiB,YAAcM,GAAS,sBACxCL,EAAmB,YAAcM,GAAU,gBAC5C,CAGDJ,IAGA,eAAeK,GAAa,CAC1B,GAAI,CAEF,MAAMC,EAAO,MADI,MAAM,MAAM,2CAA2C,GAC5C,OAEtBL,EAAkBF,IAItBO,EAAK,QAAUL,EAAgB,OAC/BK,EAAK,SAAWL,EAAgB,QAGhC,wBACEK,EAAK,MACLA,EAAK,OACL,IAAI,KAAM,EAAC,aAAc,CACnC,EACQJ,EAAaI,EAAK,MAAOA,EAAK,MAAM,GAGpCN,GAEH,OAAQO,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,CAC7C,CACF,CAGD,YAAYF,EAAY,GAAK,GAAK,GAAK,GAAI,CAC7C,CAAC"}